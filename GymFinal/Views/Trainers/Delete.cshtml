
@model GymFinal.Models.Trainers
@using Microsoft.AspNetCore.Identity
@using GymFinal.Areas.Identity.Data
@inject SignInManager<GymFinalUser> SignInManager
@inject UserManager<GymFinalUser> UserManager
@{
    ViewData["Title"] = "Delete";
}

@if (SignInManager.IsSignedIn(User)) //if we connected
{

    if (UserManager.GetUserAsync(User).Result.Role == "Admin") // if admin
    {
        <h1>Delete</h1>

        <h3>Are you sure you want to delete this?</h3>
        <div>
            <h4>Trainers</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.TrainerName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.TrainerName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Seniority)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Seniority)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.PhoneNumber)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Email)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Email)
                </dd>
            </dl>

            <form asp-action="Delete">
                <input type="hidden" asp-for="TrainersID" />
                <input type="submit" value="Delete" class="btn btn-danger" /> |
                <a asp-action="Index">Back to List</a>
            </form>
        </div>
    }
}