

@model IEnumerable<GymFinal.Models.Trainers>
@using Microsoft.AspNetCore.Identity
@using GymFinal.Areas.Identity.Data
@inject SignInManager<GymFinalUser> SignInManager
@inject UserManager<GymFinalUser> UserManager

@{
    ViewData["Title"] = "Index";
}

@if (SignInManager.IsSignedIn(User)) //if we connected
{
    <h1>Team</h1>
    @if (UserManager.GetUserAsync(User).Result.Role == "Admin") // if admin
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
    <!--search button -->
<form asp-action="search">
    <input name="name" placeholder="Enter Trainer name" />
    @if (UserManager.GetUserAsync(User).Result.Role == "Admin")
    {
        <input name="id" placeholder="Enter Trainer Id" />
    }
        <input type="submit" value="search" />
    </form>
    <!--search button -->
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.TrainerName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Seniority)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                @if (UserManager.GetUserAsync(User).Result.Role == "Admin")// if admin
                {
                    <th>
                        @Html.DisplayNameFor(model => model.TrainersID)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PhoneNumber)
                    </th>
                    <th></th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.TrainerName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Seniority)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    @if (UserManager.GetUserAsync(User).Result.Role == "Admin")// if admin
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.TrainersID)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>
                    }

                    <td>
                        <a asp-action="Details" asp-route-id="@item.TrainersID">Details</a>
                    </td>
                    @if (UserManager.GetUserAsync(User).Result.Role == "Admin")// if admin
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.TrainersID">Edit</a> |
                            <a asp-action="Delete" asp-route-id="@item.TrainersID">Delete</a>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}


