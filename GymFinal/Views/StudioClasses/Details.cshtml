@model GymFinal.Models.StudioClass
@using Microsoft.AspNetCore.Identity
@using GymFinal.Areas.Identity.Data
@inject SignInManager<GymFinalUser> SignInManager
@inject UserManager<GymFinalUser> UserManager

@{
    ViewData["Title"] = "Details";
}

@if (SignInManager.IsSignedIn(User)) //if we connected
{
    <h1>Details</h1>

    <div>
        <h4>StudioClass</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ClassName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ClassName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Type)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Type)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DuringTime)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.DuringTime)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BurnCalories)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BurnCalories)
            </dd>
            @if (UserManager.GetUserAsync(User).Result.Role == "Admin")
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ID)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ID)
                </dd>
            }
            </dl>
    </div>

    <div>
        <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>
}
