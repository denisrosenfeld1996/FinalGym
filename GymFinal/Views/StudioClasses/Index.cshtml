@model IEnumerable<GymFinal.Models.StudioClass>
@using Microsoft.AspNetCore.Identity
@using GymFinal.Areas.Identity.Data
@inject SignInManager<GymFinalUser> SignInManager
@inject UserManager<GymFinalUser> UserManager

@{
    ViewData["Title"] = "Index";

}
@if (SignInManager.IsSignedIn(User)) //if we connected
{
    <h1>Studio classes</h1>
    <div class="sidenav">
        <a href="https://www.youtube.com/watch?v=utsUU0dC2fU">TRX</a>
        <a href="https://www.youtube.com/watch?v=bm4WZyH5p2I">Zumba</a>
        <a href="https://www.youtube.com/watch?v=oKCzJjszSVU">Pilaties</a>
        <a href="https://www.youtube.com/watch?v=b6IFkfSj4Jo">Yoga</a>
    </div>
    @if (UserManager.GetUserAsync(User).Result.Role == "Admin")
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
    <!--search button-->
    <form asp-action="Search">
        <input name="name" placeholder="Enter class name" /> or
        <input name="calories" placeholder="Enter burn calories" /> or
        <input name="type" placeholder="Enter type lesson" />
        <input type="submit" value="search" />
    </form>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ClassName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DuringTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BurnCalories)
                </th>
                @if (UserManager.GetUserAsync(User).Result.Role == "Admin")
                {
                    <th>
                        @Html.DisplayNameFor(model => model.ID)
                    </th>
                }
                    <th></th>
                </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ClassName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DuringTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BurnCalories)
                </td>
                @if (UserManager.GetUserAsync(User).Result.Role == "Admin")//if admin
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.ID)
                    </td>
                }
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a>
                </td>
                @if (UserManager.GetUserAsync(User).Result.Role == "Admin")//if admin
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                }
            </tr>
            }
        </tbody>
    </table>


    <style>
        body {
            font-family: "Lato", sans-serif;
        }

        .sidenav {
            height: 100%;
            width: 70px;
            position: fixed;
            z-index: 1;
            top: 0;
            left: 0;
            background-color: #111;
            overflow-x: hidden;
            padding-top: 20px;
        }

            .sidenav a {
                padding: 6px 8px 6px 16px;
                text-decoration: none;
                font-size: 10px;
                color: #818181;
                display: block;
            }

                .sidenav a:hover {
                    color: #f1f1f1;
                }

        .main {
            margin-left: 160px; 
            font-size: 28px; 
            padding: 0px 10px;
        }
    </style>
}
