@model GymFinal.Models.Lesson
@using Microsoft.AspNetCore.Identity
@using GymFinal.Areas.Identity.Data
@inject SignInManager<GymFinalUser> SignInManager
@inject UserManager<GymFinalUser> UserManager

@{
    ViewData["Title"] = "Details";
}

@if (SignInManager.IsSignedIn(User)) //if we connected
{
    <h1>Details</h1>

    <div>
        <h4>Lesson</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Capacity)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Capacity)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.LessonDay)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LessonDay)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.LessonTime)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LessonTime)
            </dd>

            @if (UserManager.GetUserAsync(User).Result.Role == "Admin")
            {
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Trainer.TrainersID)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Trainer.TrainersID)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.StudioClass.ID)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.StudioClass.ID)
                </dd>     
            }
        </dl>
    </div>
    <!--Join1-StudioClass+Trainers-->
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.StudioClass.ClassName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StudioClass.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Trainer.TrainerName)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudioClass.ClassName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudioClass.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.Trainer.TrainerName)
                </td>
            </tr>
        </tbody>
    </table>
    <!--Join2-StudioClass-->
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.StudioClass.ClassName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StudioClass.BurnCalories)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudioClass.ClassName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem.StudioClass.BurnCalories)
                </td>
            </tr>
        </tbody>
    </table>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.LessonID">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>
}