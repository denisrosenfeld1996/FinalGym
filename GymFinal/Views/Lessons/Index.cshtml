@model IEnumerable<GymFinal.Models.Lesson>
@using Microsoft.AspNetCore.Identity
@using GymFinal.Areas.Identity.Data
@inject SignInManager<GymFinalUser> SignInManager
@inject UserManager<GymFinalUser> UserManager

@{
    ViewData["Title"] = "Index";
}

@if (SignInManager.IsSignedIn(User))
{
    <h1>Lessons</h1>
    @if (UserManager.GetUserAsync(User).Result.Role == "Admin")
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }
    <!--Search -->
    <form asp-action="search">
        <input name="day" placeholder="Enter lesson day" />
        <input type="submit" value="search" />
    </form>
    <!--Search -->
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Capacity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LessonDay)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LessonTime)
                </th>
                    <th></th>
                </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Capacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LessonDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LessonTime)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.LessonID">Details</a>
                </td>
                @if (UserManager.GetUserAsync(User).Result.Role == "Admin")
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.LessonID">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@item.LessonID">Delete</a>
                    </td>
                }
            </tr>
            }
        </tbody>
    </table>
}

